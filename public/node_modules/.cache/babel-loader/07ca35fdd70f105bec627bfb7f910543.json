{"ast":null,"code":"import _defineProperty from \"/Users/tay/Desktop/Projects/diabetter/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/tay/Desktop/Projects/diabetter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tay/Desktop/Projects/diabetter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tay/Desktop/Projects/diabetter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tay/Desktop/Projects/diabetter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tay/Desktop/Projects/diabetter/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/tay/Desktop/Projects/diabetter/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/tay/Desktop/Projects/diabetter/src/ReadingForm.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'; // actions:\n\nimport { addReading } from './actions/readings';\n\nvar ReadingForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ReadingForm, _Component);\n\n  function ReadingForm(props) {\n    var _this;\n\n    _classCallCheck(this, ReadingForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReadingForm).call(this, props));\n    _this.state = {\n      bloodGlucose: \"\",\n      note: \"\"\n    };\n    _this.updateFormDetails = _this.updateFormDetails.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ReadingForm, [{\n    key: \"updateFormDetails\",\n    value: function updateFormDetails(_ref) {\n      var _ref$target = _ref.target,\n          value = _ref$target.value,\n          name = _ref$target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var _this$state = this.state,\n          bloodGlucose = _this$state.bloodGlucose,\n          note = _this$state.note;\n      var reading = {\n        bloodGlucose: bloodGlucose,\n        note: note\n      };\n      console.log(reading);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props);\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"bloodGlucose\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Bg, mmol / L\"), React.createElement(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        name: \"bloodGlucose\",\n        id: \"bloodGlucose\",\n        onChange: function onChange(e) {\n          return _this2.updateFormDetails(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Note:\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"note\",\n        id: \"note\",\n        placeholder: \"7 units of insulin, etc.\",\n        onChange: function onChange(e) {\n          return _this2.updateFormDetails(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return ReadingForm;\n}(Component);\n\n;\nexport default connect()(ReadingForm);","map":{"version":3,"sources":["/Users/tay/Desktop/Projects/diabetter/src/ReadingForm.jsx"],"names":["React","Component","connect","addReading","ReadingForm","props","state","bloodGlucose","note","updateFormDetails","bind","onSubmit","target","value","name","setState","e","preventDefault","reading","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,oBAA3B;;IAEMC,W;;;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,EADL;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAKA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,uDAAzB;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,uDAAhB;AATe;AAUlB;;;;4CAE8C;AAAA,6BAA3BE,MAA2B;AAAA,UAAjBC,KAAiB,eAAjBA,KAAiB;AAAA,UAAVC,IAAU,eAAVA,IAAU;AAC3C,WAAKC,QAAL,qBAAiBD,IAAjB,EAAwBD,KAAxB;AACH;;;6BAEQG,C,EAAG;AACRA,MAAAA,CAAC,CAACC,cAAF;AADQ,wBAGuB,KAAKX,KAH5B;AAAA,UAGAC,YAHA,eAGAA,YAHA;AAAA,UAGcC,IAHd,eAGcA,IAHd;AAKR,UAAMU,OAAO,GAAG;AACZX,QAAAA,YAAY,EAAZA,YADY;AAEZC,QAAAA,IAAI,EAAJA;AAFY,OAAhB;AAKAW,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACH;;;6BAEQ;AAAA;;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAjB;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAC,cAA/B;AAA8C,QAAA,IAAI,EAAC,cAAnD;AAAkE,QAAA,EAAE,EAAC,cAArE;AAAoF,QAAA,QAAQ,EAAE,kBAACW,CAAD;AAAA,iBAAO,MAAI,CAACP,iBAAL,CAAuBO,CAAvB,CAAP;AAAA,SAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAKI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA4C,QAAA,IAAI,EAAC,MAAjD;AAAwD,QAAA,EAAE,EAAC,MAA3D;AAAkE,QAAA,WAAW,EAAC,0BAA9E;AAAyG,QAAA,QAAQ,EAAE,kBAACA,CAAD;AAAA,iBAAO,MAAI,CAACP,iBAAL,CAAuBO,CAAvB,CAAP;AAAA,SAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CALJ,EAUI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAkD,QAAA,OAAO,EAAE,KAAKL,QAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,CADJ,CADJ;AAiBH;;;;EAlDqBV,S;;AAmDzB;AAED,eAAeC,OAAO,GAAGE,WAAH,CAAtB","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux'\n\n// actions:\nimport { addReading } from './actions/readings';\n\nclass ReadingForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            bloodGlucose: \"\",\n            note: \"\"\n        };\n\n        this.updateFormDetails = this.updateFormDetails.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    };\n\n    updateFormDetails({ target: { value, name } }) {\n        this.setState({ [name]: value });\n    };\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const { bloodGlucose, note } = this.state;\n\n        const reading = {\n            bloodGlucose,\n            note\n        };\n\n        console.log(reading);\n    };\n\n    render() {\n        console.log(this.props);\n\n        return (\n            <form>\n                <fieldset>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"bloodGlucose\">Bg, mmol / L</label>\n                        <input type=\"number\" className=\"form-control\" name=\"bloodGlucose\" id=\"bloodGlucose\" onChange={(e) => this.updateFormDetails(e)}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"note\">Note:</label>\n                        <input type=\"text\" className=\"form-control\" name=\"note\" id=\"note\" placeholder=\"7 units of insulin, etc.\" onChange={(e) => this.updateFormDetails(e)}/>\n                    </div>\n                    \n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={this.onSubmit}>Submit</button>\n\n                </fieldset>\n            </form>\n        );\n    };\n};\n\nexport default connect()(ReadingForm);"]},"metadata":{},"sourceType":"module"}